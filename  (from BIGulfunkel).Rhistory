}
model.1(0.5,0.5)
prob
update_prob(0.5,0.5,0.5)
update_prob(1,1,0.5)
mod.data<-subset(my.data,trials>5&id==1)
mod.data<-subset(my.data,trials>5&id==cp)
mod.data
mod.data$own_bid[mod.data$pref_new==5]
mod.data$other_bid[mod.data$pref_new==5]
mod.data$other_bid[mod.data$pref_new==1]
mod.data$own_bid[mod.data$pref_new==1]
mod.data$own_bid[mod.data$pref_new==2]
model.1<-function(alpha,beta){
cp<-1
#print (alpha)
#print(beta)
#current player
#cp<-1
#beta<-0.5
#alpha<-0.1
#select subset of data
mod.data<-subset(my.data,trials>5&id==cp)
#initialise utility
util<-as.numeric(subset(my.data,trials<6&id==cp)$own_bid)
util<-sort(util)
#initialise probability to win
prob<<-matrix(ncol=5,nrow=101,data=0)
for (i in 3:3){
help.data<-subset(mod.data,pref_new==i)
thresh<-max(c(help.data$other_bid[1],help.data$own_bid[1]))
prob[thresh+1,i]<<-0.5
if(thresh<100) prob[(thresh+2):nrow(prob),i]<-1
rm(help.data)
}
#this quantity will be maximized
choice_probability<<-rep(0,194)
choices<<-rep(0,194)
###############
#go through trials
###############
for (i in 1:nrow(mod.data)){
#get the probability for the decision
c_pref<-mod.data$pref_new[i]
if(mod.data$own_bid[i]<1){
choice_probability[i]<<-prob[1,c_pref]+(1-prob[util[c_pref]+1,c_pref])
choices[i]<<- -1
}
else {
choice_probability[i]<<-prob[util[c_pref]+1,c_pref]
choices[i]<<- mod.data$own_bid[i]
}
#update probability to win the auction (has to be refined)
prob_new<-rep(0,101)
thresh<-max(c(mod.data$other_bid[i],mod.data$own_bid[i]))
prob_new[thresh+1]<-0.5
if(thresh<100) prob_new[(thresh+2):nrow(prob)]<-1
if(thresh==100) prob_new[101]<-1
prob[,c_pref]<<-update_prob(prob[,c_pref],prob_new,beta)
#update utility
util[c_pref]<-round(util[c_pref]+alpha*(mod.data$other_bid[i]-util[c_pref]))
util[util<0]<-0
util[util>100]<-100
}
#print(util)
return(-sum(log(choice_probability+0.01)))
}
model.1(0.5,0.5)
model.1(0.5,0.5)
prob
choice_probability
m.1<-mle2(model.1,start=list(beta=0.5,alpha=0.1),lower=c(beta>0, alpha>0),method="L-BFGS-B",trace=TRUE)
summary(m.1)
results<-matrix(nrow=100,ncol=100,data=0)
for(i in 1:100)
for(j in 1:100)
results[i,j]<-model.1(0.01*i,0.01*j)
res.plot<-melt(results)
ggplot(aes(x=X1,y=X2,z=value,fill=value),data=res.plot)+geom_tile()+geom_contour()
m.1<-mle2(model.1,start=list(alpha=0.1),lower=c(alpha>0),fixed=c(beta=0.5),method="L-BFGS-B",trace=TRUE)
summary(m.1)
model(0.5,0.5)
model.1(0.5,0.5)
prob
model.1(0.5,0.1)
prob
model.1(0.5,0.1)
model.1<-function(alpha,beta){
cp<-1
#print (alpha)
#print(beta)
#current player
#cp<-1
#beta<-0.5
#alpha<-0.1
#select subset of data
mod.data<-subset(my.data,trials>5&id==cp)
#initialise utility
util<-as.numeric(subset(my.data,trials<6&id==cp)$own_bid)
util<-sort(util)
#initialise probability to win
prob<<-matrix(ncol=5,nrow=101,data=0)
for (i in 3:3){
help.data<-subset(mod.data,pref_new==i)
thresh<-max(c(help.data$other_bid[1],help.data$own_bid[1]))
prob[thresh+1,i]<<-0.5
if(thresh<100) prob[(thresh+2):nrow(prob),i]<-1
rm(help.data)
}
#this quantity will be maximized
choice_probability<<-rep(0,194)
choices<<-rep(0,194)
###############
#go through trials
###############
for (i in 1:nrow(mod.data)){
#get the probability for the decision
c_pref<-mod.data$pref_new[i]
if(mod.data$own_bid[i]<1){
choice_probability[i]<<-prob[1,c_pref]+(1-prob[util[c_pref]+1,c_pref])
choices[i]<<- -1
}
else {
choice_probability[i]<<-prob[util[c_pref]+1,c_pref]
choices[i]<<- mod.data$own_bid[i]
}
#update probability to win the auction (has to be refined)
prob_new<-rep(0,101)
thresh<-max(c(mod.data$other_bid[i],mod.data$own_bid[i]))
prob_new[thresh+1]<-0.5
if(thresh<100) prob_new[(thresh+2):nrow(prob)]<-1
if(thresh==100) prob_new[101]<-1
prob[,c_pref]<<-update_prob(prob[,c_pref],prob_new,beta)
#update utility
util[c_pref]<-round(util[c_pref]+alpha*(mod.data$other_bid[i]-util[c_pref]))
print(util)
util[util<0]<-0
util[util>100]<-100
}
return(-sum(log(choice_probability+0.01)))
}
model.1(0.5,0.1)
mod.data$own_bid[pref_new==5]-util[,5]
mod.data$own_bid[mod.data$pref_new==5]-util[,5]
mod.data$own_bid[mod.data$pref_new==5]-util[5,]
model.1<-function(alpha,beta){
cp<-1
#print (alpha)
#print(beta)
#current player
#cp<-1
#beta<-0.5
#alpha<-0.1
#select subset of data
mod.data<-subset(my.data,trials>5&id==cp)
#initialise utility
util<<-as.numeric(subset(my.data,trials<6&id==cp)$own_bid)
util<<-sort(util)
#initialise probability to win
prob<<-matrix(ncol=5,nrow=101,data=0)
for (i in 3:3){
help.data<-subset(mod.data,pref_new==i)
thresh<-max(c(help.data$other_bid[1],help.data$own_bid[1]))
prob[thresh+1,i]<<-0.5
if(thresh<100) prob[(thresh+2):nrow(prob),i]<-1
rm(help.data)
}
#this quantity will be maximized
choice_probability<<-rep(0,194)
choices<<-rep(0,194)
###############
#go through trials
###############
for (i in 1:nrow(mod.data)){
#get the probability for the decision
c_pref<-mod.data$pref_new[i]
if(mod.data$own_bid[i]<1){
choice_probability[i]<<-prob[1,c_pref]+(1-prob[util[c_pref]+1,c_pref])
choices[i]<<- -1
}
else {
choice_probability[i]<<-prob[util[c_pref]+1,c_pref]
choices[i]<<- mod.data$own_bid[i]
}
#update probability to win the auction (has to be refined)
prob_new<-rep(0,101)
thresh<-max(c(mod.data$other_bid[i],mod.data$own_bid[i]))
prob_new[thresh+1]<-0.5
if(thresh<100) prob_new[(thresh+2):nrow(prob)]<-1
if(thresh==100) prob_new[101]<-1
prob[,c_pref]<<-update_prob(prob[,c_pref],prob_new,beta)
#update utility
util[c_pref]<<-round(util[c_pref]+alpha*(mod.data$other_bid[i]-util[c_pref]))
print(util)
util[util<0]<<-0
util[util>100]<<-100
}
return(-sum(log(choice_probability+0.01)))
}
model(0.5,0.5)
model.1(0.5,0.5)
util
mod.data$own_bid[mod.data$preference==5]
mod.data$own_bid[mod.data$preference==3]
mod.data$own_bid[mod.data$preference==2]
model.1<-function(alpha,beta){
cp<-1
#print (alpha)
#print(beta)
#current player
#cp<-1
#beta<-0.5
#alpha<-0.1
#select subset of data
mod.data<-subset(my.data,trials>5&id==cp)
#initialise utility
util<<-as.numeric(subset(my.data,trials<6&id==cp)$own_bid)
util<<-sort(util)
#initialise probability to win
prob<<-matrix(ncol=5,nrow=101,data=0)
for (i in 3:3){
help.data<-subset(mod.data,pref_new==i)
thresh<-max(c(help.data$other_bid[1],help.data$own_bid[1]))
prob[thresh+1,i]<<-0.5
if(thresh<100) prob[(thresh+2):nrow(prob),i]<-1
rm(help.data)
}
#this quantity will be maximized
choice_probability<<-rep(0,194)
choices<<-rep(0,194)
###############
#go through trials
###############
for (i in 1:nrow(mod.data)){
#get the probability for the decision
c_pref<-mod.data$pref_new[i]
if(mod.data$own_bid[i]<1){
choice_probability[i]<<-prob[1,c_pref]+(1-prob[mod.data$own_bid[i],c_pref])
choices[i]<<- -1
}
else {
choice_probability[i]<<-prob[mod.data$own_bid[i],c_pref]
choices[i]<<- mod.data$own_bid[i]
}
#update probability to win the auction (has to be refined)
prob_new<-rep(0,101)
thresh<-max(c(mod.data$other_bid[i],mod.data$own_bid[i]))
prob_new[thresh+1]<-0.5
if(thresh<100) prob_new[(thresh+2):nrow(prob)]<-1
if(thresh==100) prob_new[101]<-1
prob[,c_pref]<<-update_prob(prob[,c_pref],prob_new,beta)
#update utility
util[c_pref]<<-round(util[c_pref]+alpha*(mod.data$other_bid[i]-util[c_pref]))
print(util)
util[util<0]<<-0
util[util>100]<<-100
}
return(-sum(log(choice_probability+0.01)))
}
m.1<-mle2(model.1,start=list(beta=0.5),lower=c(alpha>0),fixed=c(alpha=0.1),method="L-BFGS-B",trace=TRUE)
names(mod.data)
model.1<-function(alpha,beta){
cp<-1
#print (alpha)
#print(beta)
#current player
#cp<-1
#beta<-0.5
#alpha<-0.1
#select subset of data
mod.data<-subset(my.data,trials>5&id==cp)
#initialise utility
util<<-as.numeric(subset(my.data,trials<6&id==cp)$own_bid)
util<<-sort(util)
#initialise probability to win
prob<<-matrix(ncol=5,nrow=101,data=0)
for (i in 3:3){
help.data<-subset(mod.data,pref_new==i)
thresh<-max(c(help.data$other_bid[1],help.data$own_bid[1]))
prob[thresh+1,i]<<-0.5
if(thresh<100) prob[(thresh+2):nrow(prob),i]<-1
rm(help.data)
}
#this quantity will be maximized
choice_probability<<-rep(0,194)
choices<<-rep(0,194)
###############
#go through trials
###############
for (i in 1:nrow(mod.data)){
#get the probability for the decision
c_pref<-mod.data$pref_new[i]
if(mod.data$own_bid[i]<1){
choice_probability[i]<<-prob[1,c_pref]+(1-prob[mod.data$own_bid[i]+1,c_pref])
choices[i]<<- -1
}
else {
choice_probability[i]<<-prob[mod.data$own_bid[i]+1,c_pref]
choices[i]<<- mod.data$own_bid[i]
}
#update probability to win the auction (has to be refined)
prob_new<-rep(0,101)
thresh<-max(c(mod.data$other_bid[i],mod.data$own_bid[i]))
prob_new[thresh+1]<-0.5
if(thresh<100) prob_new[(thresh+2):nrow(prob)]<-1
if(thresh==100) prob_new[101]<-1
prob[,c_pref]<<-update_prob(prob[,c_pref],prob_new,beta)
#update utility
util[c_pref]<<-round(util[c_pref]+alpha*(mod.data$other_bid[i]-util[c_pref]))
print(util)
util[util<0]<<-0
util[util>100]<<-100
}
return(-sum(log(choice_probability+0.01)))
}
model(0.5,0.5)
model.1(0.5,0.5)
m.1<-mle2(model.1,start=list(beta=0.5),lower=c(alpha>0),fixed=c(alpha=0.1),method="L-BFGS-B",trace=TRUE)
m.1<-mle2(model.1,start=list(beta=0.5),lower=c(beta>0),fixed=c(alpha=0.1),method="L-BFGS-B",trace=TRUE)
summary(m.1)
results<-matrix(nrow=100,ncol=100,data=0)
for(i in 1:100)
for(j in 1:100)
results[i,j]<-model.1(0.01*i,0.01*j)
res.plot<-melt(results)
ggplot(aes(x=X1,y=X2,z=value,fill=value),data=res.plot)+geom_tile()+geom_contour()
results
res.plot<-melt(results)
ggplot(aes(x=X1,y=X2,z=value,fill=value),data=res.plot)+geom_tile()+geom_contour()
res.plot
ggplot(aes(y=own_bid,x=trials,col=factor(pref_new)),data=subset(my.data,trials>5&(preference==2|preference==4)))+geom_line()+facet_wrap(~id)
a<-seq(1,100)
a<-seq(1,100)
p_util<-function(n){
plot((a^(1-n)-1)/(1-n)~a)}
p_util(1)
n<-1
(a^(1-n)-1)/(1-n)
p_util(0.9)
p_util(0.5)
p_util(0.01)
p_util<-function(n){
plot(1-(a^(1-n)-1)/(1-n)~a)}
a<-seq(1,100)
p_util(0.01)
a<-seq(1,50)
p_util<-function(n){
plot(1-(a^(1-n)-1)/(1-n)~a)}
p_util(0.01)
p_util<-function(n){
plot(-(1-(a^(1-n)-1)/(1-n)~a))}
p_util(0.01)
p_util<-function(n){
plot(-(1-(a^(1-n)-1)/(1-n))~a)}
p_util(0.01)
p_util<-function(b1,b2){
plot((1-(1/(1+exp(-b1-b2*a)))~a)}
install.packages("bbmle")
install.packages("car")
summary(m.1)
m.1<-mle2(m_simp,start=list(beta=10,SM_temp=10),lower=c(beta=1,SM_temp=1),fixed=c(cp=1,save_data=0),method="L-BFGS-B",trace=TRUE)
m_simp<-function(SM_temp,beta,cp,save_data){
#initialise data
#current_player
#select subset of data
mod.data<-subset(my.data,trials>5&id==cp)
#initialise utility
util<-as.numeric(subset(my.data,trials<6&id==cp)$own_bid)
util<-sort(util)
if (save_data) probbies<-list()
#initialise probability to win auction
prob<-matrix(ncol=5,nrow=101,data=0)
for (i in 1:5){
help.data<-subset(mod.data,pref_new==i)
thresh<-max(c(help.data$other_bid[1],help.data$own_bid[1]))
prob[(thresh+1),i] <- 0.5
if(thresh<100) prob[(thresh+2):nrow(prob),i]<-1
rm(help.data)
}
# ini expected value of lottery
lottery_value<-seq(100,0,-1)
# ini expected value for all 5 items for all possible bids
Value<-matrix(ncol=5,nrow=101,data=0)
for(i in 1:5){
Value[,i]<-prob[,i]*util[i]+lottery_value
}
prob_max<-rep(0,nrow(mod.data))
#go through trials
for (i in 1:nrow(mod.data)){
current_preference <- mod.data$pref_new[i]
####selection via softmax
prob_max[i]<-exp((1/SM_temp)*Value[mod.data$own_bid[i]+1,current_preference]) / sum(exp((1/SM_temp)*Value[,current_preference]));
###update probability
prob_new<-rep(0,101)
if(mod.data$a_won[i]==-1)
thresh<-max(c(mod.data$other_bid[i],mod.data$own_bid[i]))
if(mod.data$a_won[i]==1)
thresh<-max(c(mod.data$other_bid[i],mod.data$own_bid[i]))
#calc new prob function
prob_new[thresh+1]<-0.5
if(thresh<100) prob_new[(thresh+2):nrow(prob)]<-1
#combine with old function
prob[,current_preference]<-update_prob(prob[,current_preference],prob_new,1/beta)
if (save_data) probbies[[i]]<-prob
#utility is not updated for now
#update the value function
Value[,current_preference]<-prob[,current_preference]*util[current_preference]+lottery_value
}
if (save_data){
probbies.transfer<<-probbies
}
return(-sum(log(prob_max)))
}
update_prob<-function (p1,p2,beta){
return ((beta*p1)+(1-beta)*p2)
}
require(bbmle)
m.1<-mle2(m_simp,start=list(beta=10,SM_temp=10),lower=c(beta=1,SM_temp=1),fixed=c(cp=1,save_data=0),method="L-BFGS-B",trace=TRUE)
summary(m.1)
m_simp(1.0552,32.2102,1,1)
probbies.transfer
probbies.transfer[[1]]
probbies.transfer[[1]]-probbies.transfer[[194]]
hist(probbies.transfer[[1]]-probbies.transfer[[194]])
hist(probbies.transfer[[1]]-probbies.transfer[[194]])
hist(probbies.transfer[[194]])
hist(probbies.transfer[[1]])
hist(probbies.transfer[[1]],breaks=seq(0,100,1))
hist(probbies.transfer[[1]],breaks=seq(0,1,0.01))
hist(probbies.transfer[[194]],breaks=seq(0,1,0.01))
probbies.transfer[[1]][1]
probbies.transfer[[1]]
probbies.transfer[[1]][,1]
probbies.transfer[[194]][,1]
probbies.transfer[[1]][,1]
probbies.transfer[[1]][,2]
probbies.transfer[[194]][,2]
probbies.transfer[[194]][,3]
ggplot(aes(y=value,x=trials,col=factor(variable)),data=subset(new.data,trials>5&id==1&(preference==2|preference==3|preference==4)))+geom_line()+facet_grid(id~preference)
require(ggplot2)
ggplot(aes(y=value,x=trials,col=factor(variable)),data=subset(new.data,trials>5&id==1&(preference==2|preference==3|preference==4)))+geom_line()+facet_grid(id~preference)
probbies.transfer[[20]][,3]
probbies.transfer[[120]][,3]
plot(probbies.transfer[[120]][,3],type="l")
probbies.transfer[[194]][,4]
m.1<-mle2(m_simp,start=list(beta=10,SM_temp=10),lower=c(beta=1,SM_temp=1),fixed=c(cp=2,save_data=0),method="L-BFGS-B",trace=TRUE)
summary(m.1)
ggplot(aes(y=value,x=trials,col=factor(variable)),data=subset(new.data,trials>5&id==2&(preference==2|preference==3|preference==4)))+geom_line()+facet_grid(id~preference)
ggplot(aes(y=value,x=trials,col=factor(variable)),data=subset(new.data,trials>5&id==2&(preference==2|preference==3|preference==4)))+geom_line()+facet_grid(id~pref_new)
my.data$pref_trials<-0
my.data$pref_trials<-0
for(i in 1:max(my.data$id))
{
for(j in 1:5){
my.data$pref_trials[my.data$id==i&my.data$preference==j]<-seq(1,length(my.data$pref_trials[my.data$id==i&my.data$preference==j]))
}
}
View(my.data)
my.data$pref_trials<-0
my.data$pref_trials[my.data$id==1&my.data$preference==1]
ggplot(aes(y=value,x=pref_trials,col=factor(variable)),data=subset(new.data,trials>5&id==2&(preference==2|preference==3|preference==4)))+geom_line()+facet_grid(id~pref_new)
new.data<-melt(my.data,measure.vars=c("own_bid","other_bid"))
require(reshape)
new.data<-melt(my.data,measure.vars=c("own_bid","other_bid"))
ggplot(aes(y=value,x=pref_trials,col=factor(variable)),data=subset(new.data,trials>5&id==2&(preference==2|preference==3|preference==4)))+geom_line()+facet_grid(id~pref_new)
new.data$pref_trials
my.data$pref_trials
my.data$pref_trials<-0
for(i in 1:max(my.data$id))
{
for(j in 1:5){
my.data$pref_trials[my.data$id==i&my.data$preference==j]<-seq(1,length(my.data$pref_trials[my.data$id==i&my.data$preference==j]))
}
}
new.data<-melt(my.data,measure.vars=c("own_bid","other_bid"))
ggplot(aes(y=value,x=pref_trials,col=factor(variable)),data=subset(new.data,trials>5&id==2&(preference==2|preference==3|preference==4)))+geom_line()+facet_grid(id~pref_new)
ggplot(aes(y=value,x=pref_trials,col=factor(variable)),data=subset(new.data,trials>5&id==3&(preference==2|preference==3|preference==4)))+geom_line()+facet_grid(id~pref_new)
m.1<-mle2(m_simp,start=list(beta=10,SM_temp=10),lower=c(beta=1,SM_temp=1),fixed=c(cp=3,save_data=0),method="L-BFGS-B",trace=TRUE)
summary(m.1)
m.1<-mle2(m_simp,start=list(beta=10,SM_temp=10),lower=c(beta=1,SM_temp=1),fixed=c(cp=4,save_data=0),method="L-BFGS-B",trace=TRUE)
summary(m.1)
ggplot(aes(y=value,x=pref_trials,col=factor(variable)),data=subset(new.data,trials>5&id==4&(preference==2|preference==3|preference==4)))+geom_line()+facet_grid(id~pref_new)
m.1<-mle2(m_simp,start=list(beta=10,SM_temp=10),lower=c(beta=1,SM_temp=1),fixed=c(cp=5,save_data=0),method="L-BFGS-B",trace=TRUE)
summary(m.1)
ggplot(aes(y=value,x=pref_trials,col=factor(variable)),data=subset(new.data,trials>5&id<=12&(preference==2|preference==3|preference==4)))+geom_line()+facet_grid(id~pref_new)
my.data$pair<-0
my.data$pair[my.data$id%in%switcher]<- 1
ggplot(aes(y=value,x=pref_trials,col=factor(variable)),data=subset(new.data,switcher==1,trials>5&id<=12&(preference==2|preference==3|preference==4)))+geom_line()+facet_grid(id~pref_new)
ggplot(aes(y=value,x=pref_trials,col=factor(variable)),data=subset(new.data,pair==1&trials>5&id<=12&(preference==2|preference==3|preference==4)))+geom_line()+facet_grid(id~pref_new)
new.data<-melt(my.data,measure.vars=c("own_bid","other_bid"))
ggplot(aes(y=value,x=pref_trials,col=factor(variable)),data=subset(new.data,pair==1&trials>5&id<=12&(preference==2|preference==3|preference==4)))+geom_line()+facet_grid(id~pref_new)
ggplot(aes(y=value,x=pref_trials,col=factor(variable)),data=subset(new.data,pair==1&trials>5&id<=24&(preference==2|preference==3|preference==4)))+geom_line()+facet_grid(id~pref_new)
ggplot(aes(y=value,x=pref_trials,col=factor(variable),size=a_won+1),data=subset(new.data,pair==1&trials>5&id<=24&(preference==2|preference==3|preference==4)))+geom_line()+facet_grid(id~pref_new)
ggplot(aes(y=value,x=pref_trials,col=factor(variable),size=a_won+0.05),data=subset(new.data,pair==1&trials>5&id<=24&(preference==2|preference==3|preference==4)))+geom_line()+facet_grid(id~pref_new)
ggplot(aes(y=value,x=pref_trials,col=factor(variable),size=factor(a_won)),data=subset(new.data,pair==1&trials>5&id<=24&(preference==2|preference==3|preference==4)))+geom_line()+facet_grid(id~pref_new)
ggplot(aes(y=value,x=pref_trials,col=factor(variable)),data=subset(new.data,pair==1&trials>5&id<=24&(preference==2|preference==3|preference==4)))+geom_line()+geom_point(shape=factor(a_won))facet_grid(id~pref_new)
ggplot(aes(y=value,x=pref_trials,col=factor(variable)),data=subset(new.data,pair==1&trials>5&id<=24&(preference==2|preference==3|preference==4)))+geom_line()+geom_point(shape=factor(a_won))+facet_grid(id~pref_new)
ggplot(aes(y=value,x=pref_trials,col=factor(variable)),data=subset(new.data,pair==1&trials>5&id<=24&(preference==2|preference==3|preference==4)))+geom_line()+geom_point(shape=factor(new.data$a_won))+facet_grid(id~pref_new)
ggplot(aes(y=value,x=pref_trials,col=factor(variable)),data=subset(new.data,pair==1&trials>5&id<=24&(preference==2|preference==3|preference==4)))+geom_line()+geom_point(shape=new.data$a_won)+facet_grid(id~pref_new)
ggplot(aes(y=value,x=pref_trials,col=factor(variable)),data=subset(new.data,pair==1&trials>5&id<=24&(preference==2|preference==3|preference==4)))+geom_line()+geom_point(col=new.data$a_won)+facet_grid(id~pref_new)
ggplot(aes(y=value,x=pref_trials,col=factor(variable)),data=subset(new.data,pair==1&trials>5&id<=24&(preference==2|preference==3|preference==4)))+geom_line()+geom_point(col=subset(new.data,pair==1&trials>5&id<=24&(preference==2|preference==3|preference==4))$a_won)+facet_grid(id~pref_new)
ggplot(aes(y=value,x=pref_trials,col=factor(variable),shape=a_won),data=subset(new.data,pair==1&trials>5&id<=24&(preference==2|preference==3|preference==4)))+geom_line()+geom_point()+facet_grid(id~pref_new)
ggplot(aes(y=value,x=pref_trials,col=factor(variable),shape=factor(a_won)),data=subset(new.data,pair==1&trials>5&id<=24&(preference==2|preference==3|preference==4)))+geom_line()+geom_point()+facet_grid(id~pref_new)
ggplot(aes(y=value,x=pref_trials,col=factor(variable)),data=subset(new.data,pair==1&trials>5&id<=24&(preference==2|preference==3|preference==4)))+geom_line()+geom_point(,shape=factor(a_won))+facet_grid(id~pref_new)
ggplot(aes(y=value,x=pref_trials,col=factor(variable)),data=subset(new.data,pair==1&trials>5&id<=24&(preference==2|preference==3|preference==4)))+geom_line(shape=factor(a_won))+geom_point()+facet_grid(id~pref_new)
ggplot(aes(y=value,x=pref_trials,col=factor(variable)),data=subset(new.data,pair==1&trials>5&id<=24&(preference==2|preference==3|preference==4)))+geom_line(aes(shape=factor(a_won)))+facet_grid(id~pref_new)
ggplot(aes(y=value,x=pref_trials,col=factor(variable)),data=subset(new.data,pair==1&trials>5&id<=24&(preference==2|preference==3|preference==4)))+geom_line()+facet_grid(id~pref_new)
ggplot(aes(y=value,x=pref_trials,col=factor(variable)),data=subset(new.data,pair==1&trials>5&id<=24&(preference==1|preference==1|preference==5)))+geom_line()+facet_grid(id~pref_new)
ggplot(aes(y=value,x=pref_trials,col=factor(variable)),data=subset(new.data,pair==1&trials>5&id==13&(preference==1|preference==2|preference==3|preference==4|preference==5)))+geom_line()+facet_grid(id~pref_new)
ggplot(aes(y=value,x=pref_trials,col=factor(variable)),data=subset(new.data,pair==1&trials>5&id==13&(preference==1|preference==2|preference==3|preference==4|preference==5)))+geom_line()+facet_grid(id~pref_new)
ggplot(aes(y=value,x=pref_trials,col=factor(variable)),data=subset(new.data,pair==1&trials>5&id<=12&(preference==1|preference==2|preference==3|preference==4|preference==5)))+geom_line()+facet_grid(id~pref_new)
ggplot(aes(y=value,x=pref_trials,col=factor(variable)),data=subset(new.data,pair==1&trials>5&id>=12&(preference==1|preference==2|preference==3|preference==4|preference==5)))+geom_line()+facet_grid(id~pref_new)
